/* Symbols */

#define LINUX_UNICODE_LEAD  &macro_tap &kp LC(LS(U))
#define LINUX_UNICODE_TRAIL &macro_tap &kp SPACE

#define LINUX_UNICODE_SINGLE(name, L0, L1, L2, L3) \
    name: name { \
        compatible = "zmk,behavior-macro"; \
        wait-ms = <0>; \
        tap-ms = <0>; \
        #binding-cells = <0>; \
        bindings = <LINUX_UNICODE_LEAD>, \
                   <&macro_tap &kp L0 &kp L1 &kp L2 &kp L3>, \
                   <LINUX_UNICODE_TRAIL>; \
    };


/ {
    macros {
        LINUX_UNICODE_SINGLE(dot,        N0, N0, N2, E)  // .
        LINUX_UNICODE_SINGLE(comma,      N0, N0, N2, C)  // ,
        LINUX_UNICODE_SINGLE(colon,      N0, N0, N3, A)  // :
        LINUX_UNICODE_SINGLE(semicolon,  N0, N0, N3, B)  // ;

        LINUX_UNICODE_SINGLE(caret,      N0, N0, N5, E)  // ^
        LINUX_UNICODE_SINGLE(dollar,     N0, N0, N2, N4) // $

        LINUX_UNICODE_SINGLE(tilde,      N0, N0, N7, E)  // ~
        LINUX_UNICODE_SINGLE(grave,      N0, N0, N6, N0) // `
        LINUX_UNICODE_SINGLE(dquotes,    N0, N0, N2, N2) // "
        LINUX_UNICODE_SINGLE(hash,       N0, N0, N2, N3) // #
        LINUX_UNICODE_SINGLE(at,         N0, N0, N4, N0) // @
        LINUX_UNICODE_SINGLE(ampersand,  N0, N0, N2, N6) // &

        LINUX_UNICODE_SINGLE(bslash,     N0, N0, N5, C)  // \ backslash
        LINUX_UNICODE_SINGLE(pipe,       N0, N0, N7, C)  // |
        LINUX_UNICODE_SINGLE(slash,      N0, N0, N2, F)  // /
        LINUX_UNICODE_SINGLE(question,   N0, N0, N3, F)  // ?

        LINUX_UNICODE_SINGLE(lbrace,     N0, N0, N7, B)  // {
        LINUX_UNICODE_SINGLE(rbrace,     N0, N0, N7, D)  // }
        LINUX_UNICODE_SINGLE(lbracket,   N0, N0, N5, B)  // [
        LINUX_UNICODE_SINGLE(rbracket,   N0, N0, N5, D)  // ]
        LINUX_UNICODE_SINGLE(less,       N0, N0, N3, C)  // <
        LINUX_UNICODE_SINGLE(greater,    N0, N0, N3, E)  // >

        LINUX_UNICODE_SINGLE(unders,     N0, N0, N5, F)  // _ underscore
        LINUX_UNICODE_SINGLE(nbsp,       N0, N0, A, N0)  //   no-break space

        LINUX_UNICODE_SINGLE(laquo,      N0, N0, A,  B)  // «
        LINUX_UNICODE_SINGLE(raquo,      N0, N0, B,  B)  // »

        LINUX_UNICODE_SINGLE(en_dash,    N2, N0, N1, N3) // –
        LINUX_UNICODE_SINGLE(em_dash,    N2, N0, N1, N4) // —
        LINUX_UNICODE_SINGLE(h_bar,      N2, N0, N1, N5) // ―

        LINUX_UNICODE_SINGLE(bullet,     N2, N0, N2, N2) // •
        LINUX_UNICODE_SINGLE(h_ellipsis, N2, N0, N2, N6) // …
    };
};
