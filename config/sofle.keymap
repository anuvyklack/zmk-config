#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/sofle.h"
#include "zmk-helpers/unicode-chars/russian.dtsi"

#define ___ &trans
#define XXX &none

// OS
#define WINDOWS 0
#define LINUX 1
#define MAC_OS 2

#define HOST_OS LINUX // Needed for unicode international_chars

// Layers
#define QWERTY 0
#define SYM 1
#define NAV 2
#define NUM 3

// #include "./util/symbols.dtsi"
#include "./util/my-symbols.dtsi"

//-- Global settings -----------------------------------------------------------

#define QUICK_TAP_MS 175

// &lt {  // layer-tap config
//     // flavor = "balanced";
//     // tapping-term-ms = <200>;
//     quick-tap-ms = <QUICK_TAP_MS>;
// };

// My layer-tap behavior
ZMK_HOLD_TAP(mylt,
    flavor = "hold-preferred";
    tapping-term-ms = <170>;
    quick-tap-ms = <175>;
    bindings = <&mo>, <&kp>;
)

//-- Combos --------------------------------------------------------------------
//                          KEY POSITIONS
// ╭─────────────────────────╮          ╭─────────────────────────╮
// │ LN5 LN4 LN3 LN2 LN1 LN0 │          │ RN0 RN1 RN2 RN3 RN4 RN5 │
// │ LT5 LT4 LT3 LT2 LT1 LT0 │          │ RT0 RT1 RT2 RT3 RT4 RT5 │
// │ LM5 LM4 LM3 LM2 LM1 LM0 │ LEC  REC │ RM0 RM1 RM2 RM3 RM4 RM5 │
// │ LB5 LB4 LB3 LB2 LB1 LB0 ╰───╮  ╭───╯ RB0 RB1 RB2 RB3 RB4 RB4 │
// ╰───────╮ LH4 LH3 LH2 LH1 LH0 │  │ RH0 RH1 RH2 RH3 RH4 ╭───────╯
//         ╰─────────────────────╯  ╰─────────────────────╯
#define KEYS_L LN0 LN1 LN2 LN3 LN4 LN5 LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RN0 RN1 RN2 RN3 RN4 RN5 RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH4 LH3 LH2 LH1 LH0 RH0 RH1 RH2 RH3 RH4  // thumbs

// Common combos "timeout-ms" — number of milliseconds all keys must be pressed
// within to trigger the combo.
#define COMBO_TERM 50

// Switch language: EN/RU
ZMK_COMBO(lang_combo, &lang, LH1 RH1, ALL)

ZMK_COMBO(capsword_combo, &caps_word, LH0 RH0, ALL)

// // Tap ()/{}/[] to print open-close brackets and place caret between
ZMK_COMBO(parens_combo,   &parens_pair,   RM1 RM2, SYM)
ZMK_COMBO(braces_combo,   &braces_pair,   LM2 LM1, SYM)
ZMK_COMBO(brackets_combo, &brackets_pair, LB2 LB1, SYM)

ZMK_MACRO(parens_pair,   bindings = <&kp LPAR &kp RPAR &kp LEFT>;)
ZMK_MACRO(braces_pair,   bindings = <&kp LBRC &kp RBRC &kp LEFT>;)
ZMK_MACRO(brackets_pair, bindings = <&kp LBKT &kp RBKT &kp LEFT>;)

//------------------------------------------------------------------------------
ZMK_MACRO(lang, bindings = <&macro_press &kp LGUI>,
                           <&macro_tap &kp SPACE>,
                           <&macro_release &kp LGUI>;)

// ←/→ workspace
ZMK_MACRO(wsp_left, bindings = <&kp LG(LA(LEFT))>;)
ZMK_MACRO(wsp_right, bindings = <&kp LG(LA(RIGHT))>;)

// ←/→ tab
ZMK_MACRO(next_tab, bindings = <&kp LC(TAB)>;)
ZMK_MACRO(prev_tab, bindings = <&kp LC(LS(TAB))>;)

// forward / backward (in file manager, history in browser, etc)
ZMK_MACRO(forward,  bindings = <&kp LA(RIGHT)>;)
ZMK_MACRO(backward, bindings = <&kp LA(LEFT)>;)

// Next / previous word
ZMK_MACRO(word_l, bindings = <&kp LC(LEFT)>;)
ZMK_MACRO(word_r, bindings = <&kp LC(RIGHT)>;)

// Select word, with cursor somewhere in between
ZMK_MACRO(select_word,
          bindings = <&macro_press &kp LCTRL>,
                     <&macro_tap &kp LEFT>,
                     <&macro_press &kp LSHIFT>,
                     <&macro_tap &kp RIGHT>,
                     <&macro_release &kp LSHIFT &kp LCTRL>;)

// Delete word, with cursor somewhere in between
ZMK_MACRO(delete_word, bindings = <&select_word &kp BACKSPACE>;)

// ZMK_MACRO(dot_space,
//           wait-ms = <0>;
//           tap-ms = <5>;
//           bindings = <&kp DOT &kp SPACE &sk LSHFT>;)
// ZMK_MOD_MORPH(spc_morph,
//               mods = <(MOD_LSFT|MOD_RSFT)>;
//               bindings = <&kp SPACE>, <&dot_space>;)
// // tap: space | shift + tap: dot -> space -> sticky shift | hold: activate layer
// ZMK_HOLD_TAP(lt_spc,
//     flavor = "balanced";
//     tapping-term-ms = <200>;
//     quick-tap-ms = <QUICK_TAP_MS>;
//     bindings = <&mo>, <&spc_morph>;
// )

// Left homerow modifiers
ZMK_HOLD_TAP(hml,
    flavor = "tap-unless-interrupted";
    // Produces tap if held longer than tapping-term-ms
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>; // A quick tap+hold holds tap key pressed.
    // Consider activating hold behavior only if key was pressed in more
    // than this amound of time after previous.
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
)

// Right homerow modifiers
ZMK_HOLD_TAP(hmr,
    flavor = "tap-unless-interrupted";
    // Produces tap if held longer than tapping-term-ms
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>; // A quick tap+hold holds tap key pressed.
    // Consider activating hold behavior only if key was pressed in more
    // than this amound of time after previous.
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
)

// Left homerow modifiers for navigation layer
ZMK_HOLD_TAP(hml_nav,
    flavor = "balanced";
    // Produces tap if held longer than tapping-term-ms
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>; // A quick tap+hold holds tap key pressed.
    // Consider activating hold behavior only if key was pressed in more
    // than this amound of time after previous.
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <LM1 LM2 LM3 LM4 KEYS_R THUMBS>;
)
//-- Layers --------------------------------------------------------------------

ZMK_LAYER(qwerty,
//  t: tap, h: hold
// ╭─────────┬─────────┬─────────┬─────────┬─────────┬───────────╮                       ╭──────────┬────────┬────────┬─────────┬─────────┬──────────╮
// │    ←    │   >││   │    →    │ C+S+TAB │  C+TAB  │           │                       │          │  Alt ← │  Alt → │         │         │          │
// ├─────────┼─────────┼─────────┼─────────┼─────────┼───────────┤                       ├──────────┼────────┼────────┼─────────┼─────────┼──────────┤
// │ RUS/ENG │    Q    │    W    │    E    │    R    │     T     │                       │    Y     │    U   │   I    │    O    │    P    │   ru Х   │
// ├─────────┼─────────┼─────────┼─────────┼─────────┼───────────┤                       ├──────────┼────────┼────────┼─────────┼─────────┼──────────┤
// │   TAB   │    A    │    S    │    D    │    F    │     G     │                       │    H     │    J   │   K    │    L    │   ; :   │   ' "    │
// ├─────────┼─────────┼─────────┼─────────┼─────────┼───────────┤                       ├──────────┼────────┼────────┼─────────┼─────────┼──────────┤
// │  Shift  │    Z    │    X    │    C    │    V    │     B     │   mute                │    N     │    M   │  , <   │  . >    │   / ?   │   Ctrl   │
// ╰─────────┴─────────┴─────────┴─────────┴─────────┴───────────╯                       ╰──────────┴────────┴────────┴─────────┴─────────┴──────────╯
//                     ╭─────────┬─────────┬─────────┬───────────┬─────────╮  ╭──────────┬──────────┬────────┬────────┬─────────╮
//                     │         │   Alt   │ t: Esc  │ t: Space  │   Win   │  │ t: Enter │ t: Bspc  │        │        │         │
//                     │         │         │ h: NAV  │ h: Ctrl   │         │  │ h: Shift │ h: SYM   │ h: NUM │        │         │
//                     ╰─────────┴─────────┴─────────┴───────────┴─────────╯  ╰──────────┴──────────┴────────┴────────┴─────────╯
//╭───────────┬────────────────┬───────────┬───────────┬───────────┬───────────────╮                               ╭──────────────┬─────────────┬─────────────┬───────────┬──────────┬──────────╮
    &kp LEFT   &kp C_PLAY_PAUSE  &kp RIGHT   &prev_tab   &next_tab        XXX                                            XXX        &kp LA(LEFT) &kp LA(RIGHT)     XXX        XXX        XXX
//├───────────┼────────────────┼───────────┼───────────┼───────────┼───────────────┤                               ├──────────────┼─────────────┼─────────────┼───────────┼──────────┼──────────┤
    &kp TAB         &kp Q          &kp W       &kp E       &kp R         &kp T                                          &kp Y          &kp U         &kp I        &kp O      &kp P     &kp LBKT
//├───────────┼────────────────┼───────────┼───────────┼───────────┼───────────────┤                               ├──────────────┼─────────────┼─────────────┼───────────┼──────────┼──────────┤
    &kp TAB         &kp A          &kp S       &kp D       &kp F         &kp G                                          &kp H          &kp J         &kp K        &kp L     &kp SEMI   &kp SQT
//├───────────┼────────────────┼───────────┼───────────┼───────────┼───────────────┤                               ├──────────────┼─────────────┼─────────────┼───────────┼──────────┼──────────┤
    &kp LSHFT       &kp Z          &kp X       &kp C       &kp V         &kp B       &kp C_MUTE          XXX            &kp N          &kp M       &kp COMMA     &kp DOT    &kp FSLH   &kp RCTRL
//╰───────────┴────────────────┴───────────┴───────────┴───────────┴───────────────╯                               ╰──────────────┴─────────────┴─────────────┴───────────┴──────────┴──────────╯
//                             ╭───────────┬───────────┬───────────┬───────────────┬────────────╮  ╭───────────────┬──────────────┬─────────────┬─────────────┬───────────╮
                                    XXX      &kp LALT   &lt NAV ESC &mt LCTRL SPACE   &kp LGUI      &mt LSHFT ENTER &mylt SYM BSPC     &mo NUM         XXX          XXX
//                             ╰───────────┴───────────┴───────────┴───────────────┴────────────╯  ╰───────────────┴──────────────┴─────────────┴─────────────┴───────────╯
    , /* sensor */ &inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN
)


ZMK_LAYER(symbols,
//╭───────┬───────┬───────┬───────┬───────┬───────╮                     ╭───────┬───────┬───────┬───────┬───────┬───────╮
//│       │       │   @   │   #   │       │       │                     │       │       │       │       │       │       │
//├───────┼───────┼───────┼───────┼───────┼───────┤                     ├───────┼───────┼───────┼───────┼───────┼───────┤
//│   Ё   │   ~   │   =   │   %   │       │   _   │                     │   *   │   `   │       │   Х   │   Ъ   │       │
//├───────┼───────┼───────┼───────┼───────┼───────┤                     ├───────┼───────┼───────┼───────┼───────┼───────┤
//│   !   │   +   │   ^   │   {   │   }   │   $   │                     │   -   │   (   │   )   │       │   :   │   "   │
//├───────┼───────┼───────┼───────┼───────┼───────┤                     ├───────┼───────┼───────┼───────┼───────┼───────┤
//│   \   │   |   │   &   │   [   │   ]   │   /   │                     │   ?   │       │   <   │   >   │       │       │
//╰───────┴───────┴───────┴───────┴───────┴───────╯                     ╰───────┴───────┴───────┴───────┴───────┴───────╯
//                ╭───────┬───────┬───────┬───────┬──────────╮  ╭───────┬───────┬───────┬───────┬───────╮
//                │   «   │   »   │Compose│ Space │UnbreakSpc│  │       │ HOLD  │       │       │       │
//                ╰───────┴───────┴───────┴───────┴──────────╯  ╰───────┴───────┴───────┴───────┴───────╯
//╭────────┬──────────┬───────────┬───────────┬───────────┬───────────╮                    ╭───────────┬───────────┬──────────┬──────────┬──────────┬──────────╮
      XXX      XXX       &kp AT     &kp HASH       XXX         XXX                              XXX         XXX        XXX        XXX        XXX        XXX
//├────────┼──────────┼───────────┼───────────┼───────────┼───────────┤                    ├───────────┼───────────┼──────────┼──────────┼──────────┼──────────┤
    &ru_yo   &kp TILDE  &kp EQUAL  &kp PERCENT     XXX      &kp UNDER                        &kp ASTRK   &kp GRAVE     XXX       &ru_kh    &ru_hard     XXX
//├────────┼──────────┼───────────┼───────────┼───────────┼───────────┤                    ├───────────┼───────────┼──────────┼──────────┼──────────┼──────────┤
   &kp EXCL  &kp PLUS   &kp CARET   &kp LBRC    &kp RBRC    &kp DOLLAR                       &kp MINUS   &kp LPAR    &kp RPAR     XXX      &kp COLON   &kp DQT
//├────────┼──────────┼───────────┼───────────┼───────────┼───────────┤                    ├───────────┼───────────┼──────────┼──────────┼──────────┼──────────┤
   &kp BSLH  &kp PIPE   &kp AMPS    &kp LBKT    &kp RBKT    &kp SLASH     ___        ___     &kp QMARK      XXX      &kp LT      &kp GT    &em_dash     XXX
//╰────────┴──────────┴───────────┴───────────┴───────────┴───────────╯                    ╰───────────┴───────────┴──────────┴──────────┴──────────┴──────────╯
//                    ╭───────────┬───────────┬───────────┬───────────┬────────╮  ╭────────┬───────────┬───────────┬──────────┬──────────╮
                         &laquo      &raquo     &kp RALT    &kp SPACE   &nbsp        ___        ___         ___        ___        ___
//                    ╰───────────┴───────────┴───────────┴───────────┴────────╯  ╰────────┴───────────┴───────────┴──────────┴──────────╯
)


ZMK_LAYER(navigation,
//╭─────────┬───────────┬───────┬───────┬───────┬───────╮                  ╭──────────┬──────────┬──────────┬───────────┬───────────┬──────────╮
//│         │           │       │       │       │       │                  │          │  Wksp ←  │  Wksp →  │           │           │          │
//├─────────┼───────────┼───────┼───────┼───────┼───────┤                  ├──────────┼──────────┼──────────┼───────────┼───────────┼──────────┤
//│  C+TAB  │           │       │   ↑   │       │  DEL  │                  │   Home   │  PageUp  │ PageDown │    End    │  Insert   │          │
//├─────────┼───────────┼───────┼───────┼───────┼───────┤                  ├──────────┼──────────┼──────────┼───────────┼───────────┼──────────┤
//│ C+S+TAB │    WIN    │  ←/A  │  ↓/S  │  →/C  │ ENTER │                  │     ←    │    ↓     │    ↑     │     →     │ PrintScrn │          │
//├─────────┼───────────┼───────┼───────┼───────┼───────┤                  ├──────────┼──────────┼──────────┼───────────┼───────────┼──────────┤
//│         │           │       │       │ C+S+v │       │                  │  word ←  │   DEL    │          │   word →  │   Pause   │          │
//╰─────────┴───────────┴───────┴───────┴───────┴───────╯                  ╰──────────┴──────────┴──────────┴───────────┴───────────┴──────────╯
//                      ╭───────┬───────┬───────┬───────┬───────╮  ╭───────┬──────────┬──────────┬──────────┬───────────╮
//                      │       │       │ HOLD  │       │       │  │       │ del word │select wrd│          │           │
//                      ╰───────┴───────┴───────┴───────┴───────╯  ╰───────┴──────────┴──────────┴──────────┴───────────╯
//╭───────────┬───────────┬──────────────────┬────────────────────┬────────────────────┬───────────╮                      ╭────────────┬────────────┬────────────┬───────────┬───────────────┬──────────╮
       ___         ___            ___                 ___                  ___              ___                                ___        &wsp_left   &wsp_right      ___           ___          ___
//├───────────┼───────────┼──────────────────┼────────────────────┼────────────────────┼───────────┤                      ├────────────┼────────────┼────────────┼───────────┼───────────────┼──────────┤
    &next_tab      ___            ___                &kp UP                ___            &kp DEL                            &kp HOME    &kp PG_UP    &kp PG_DN    &kp END     &kp INSERT        ___
//├───────────┼───────────┼──────────────────┼────────────────────┼────────────────────┼───────────┤                      ├────────────┼────────────┼────────────┼───────────┼───────────────┼──────────┤
    &prev_tab   &kp LGUI   &hml_nav LALT LEFT &hml_nav LSHIFT DOWN &hml_nav LCTRL RIGHT  &kp ENTER                           &kp LEFT    &kp DOWN       &kp UP     &kp RIGHT  &kp PRINTSCREEN    ___
//├───────────┼───────────┼──────────────────┼────────────────────┼────────────────────┼───────────┤                      ├────────────┼────────────┼────────────┼───────────┼───────────────┼──────────┤
       ___         ___            ___                 ___             &kp LC(LS(V))         ___        ___          ___      &word_l      &kp DEL        ___        &word_r   &kp PAUSE_BREAK    ___
//╰───────────┴───────────┴──────────────────┴────────────────────┴────────────────────┴───────────╯                      ╰────────────┴────────────┴────────────┴───────────┴───────────────┴──────────╯
//                        ╭──────────────────┬────────────────────┬────────────────────┬───────────┬─────────╮  ╭─────────┬────────────┬────────────┬────────────┬───────────╮
                                  ___                 ___                  ___              ___        ___          ___    &delete_word &select_word     ___          ___
//                        ╰──────────────────┴────────────────────┴────────────────────┴───────────┴─────────╯  ╰─────────┴────────────┴────────────┴────────────┴───────────╯
)


ZMK_LAYER(num,
//╭─────┬─────┬─────┬─────┬─────┬─────╮                  ╭─────┬──────┬─────┬─────┬─────┬──────╮
//│     │     │     │     │     │  /  │                  │     │      │     │     │     │      │
//├─────┼─────┼─────┼─────┼─────┼─────┤                  ├─────┼──────┼─────┼─────┼─────┼──────┤
//│     │     │  7  │  8  │  9  │  *  │                  │     │  F9  │ F10 │ F11 │ F12 │      │
//├─────┼─────┼─────┼─────┼─────┼─────┤                  ├─────┼──────┼─────┼─────┼─────┼──────┤
//│     │  .  │  4  │  5  │  6  │  +  │                  │     │  F5  │ F6  │ F7  │ F8  │      │
//├─────┼─────┼─────┼─────┼─────┼─────┤                  ├─────┼──────┼─────┼─────┼─────┼──────┤
//│     │     │  1  │  2  │  3  │  -  │                  │     │  F1  │ F2  │ F3  │ F4  │      │
//╰─────┴─────┴─────┴─────┴─────┴─────╯                  ╰─────┴──────┴─────┴─────┴─────┴──────╯
//            ╭─────┬─────┬─────┬─────┬───────╮  ╭───────┬─────┬──────┬─────┬─────╮
//            │     │     │  0  │     │       │  │       │     │ HOLD │     │     │
//            ╰─────┴─────┴─────┴─────┴───────╯  ╰───────┴─────┴──────┴─────┴─────╯
//╭────────┬────────┬────────┬────────┬────────┬───────────╮                    ╭──────────┬──────────┬──────────┬───────────┬──────────┬──────────╮
     XXX      XXX       XXX     XXX      XXX      &slash                            XXX        XXX        XXX         XXX        XXX        XXX
//├────────┼────────┼────────┼────────┼────────┼───────────┤                    ├──────────┼──────────┼──────────┼───────────┼──────────┼──────────┤
     XXX      XXX     &kp N7   &kp N8   &kp N9   &kp ASTRK                          XXX       &kp F9     &kp F10    &kp F11    &kp F12      XXX
//├────────┼────────┼────────┼────────┼────────┼───────────┤                    ├──────────┼──────────┼──────────┼───────────┼──────────┼──────────┤
     XXX      &dot    &kp N4   &kp N5   &kp N6   &kp PLUS                           XXX       &kp F5     &kp F6     &kp F7     &kp F8       XXX
//├────────┼────────┼────────┼────────┼────────┼───────────┤                    ├──────────┼──────────┼──────────┼───────────┼──────────┼──────────┤
     XXX      XXX     &kp N1   &kp N2   &kp N3   &kp MINUS     XXX        XXX       XXX       &kp F1     &kp F2     &kp F3     &kp F4       XXX
//╰────────┴────────┴────────┴────────┴────────┴───────────╯                    ╰──────────┴──────────┴──────────┴───────────┴──────────┴──────────╯
//                  ╭────────┬────────┬────────┬───────────┬────────╮  ╭────────┬──────────┬──────────┬──────────┬───────────╮
                        XXX     XXX     &kp N0      XXX        XXX        XXX       XXX        XXX        XXX        XXX
//                  ╰────────┴────────┴────────┴───────────┴────────╯  ╰────────┴──────────┴──────────┴──────────┴───────────╯
)
